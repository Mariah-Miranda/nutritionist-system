    <?php
    // patients/add.php
    require_once __DIR__ . '/../config.php';
    require_once __DIR__ . '/../includes/db_connect.php';
    require_once __DIR__ . '/../includes/auth.php';

    // Set the page title for the header
    $pageTitle = "Add New Patient";

    // Require login for this page (e.g., Nutritionist or Admin)
    requireLogin();
    // if (!hasAnyRole(['Admin', 'Nutritionist'])) {
    //     header('Location: ' . BASE_URL . 'admin/index.php?message=Access denied. You do not have permission to add patients.');
    //     exit();
    // }

    // Initialize message variable
    $message = '';

    // Include the header
    require_once __DIR__ . '/../includes/header.php';
    ?>

    <div class="form-container">
        <h2 class="text-2xl font-bold text-gray-800 mb-6">Add New Patient</h2>

        <?php if ($message): ?>
            <div class="message <?php echo strpos($message, 'successful') !== false ? 'success' : 'error'; ?>">
                <?php echo $message; ?>
            </div>
        <?php endif; ?>

        <form action="<?php echo BASE_URL; ?>patients/process_patient.php" method="POST" class="space-y-6">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <!-- Full Name -->
                <div class="form-group">
                    <label for="full_name">Full Name</label>
                    <input type="text" id="full_name" name="full_name" required placeholder="John Doe">
                </div>

                <!-- Patient ID (will be auto-generated, display only or hidden) -->
                <div class="form-group">
                    <label for="patient_unique_id">Patient ID</label>
                    <input type="text" id="patient_unique_id" name="patient_unique_id" placeholder="Auto-generated" disabled>
                    <!-- This field will be auto-generated by the backend. You can make it hidden or read-only. -->
                </div>

                <!-- Date of Birth -->
                <div class="form-group">
                    <label for="date_of_birth">Date of Birth</label>
                    <input type="date" id="date_of_birth" name="date_of_birth">
                </div>

                <!-- Gender -->
                <div class="form-group">
                    <label for="gender">Gender</label>
                    <select id="gender" name="gender">
                        <option value="">Select Gender</option>
                        <option value="Male">Male</option>
                        <option value="Female">Female</option>
                        <option value="Other">Other</option>
                    </select>
                </div>

                <!-- Height (cm) -->
                <div class="form-group">
                    <label for="height_cm">Height (cm)</label>
                    <input type="number" id="height_cm" name="height_cm" step="0.01" placeholder="e.g., 175.5">
                </div>

                <!-- Weight (kg) -->
                <div class="form-group">
                    <label for="weight_kg">Weight (kg)</label>
                    <input type="number" id="weight_kg" name="weight_kg" step="0.01" placeholder="e.g., 70.2">
                </div>

                <!-- BMI (Calculated, display only) -->
                <div class="form-group">
                    <label for="bmi">BMI</label>
                    <input type="text" id="bmi" name="bmi" placeholder="Calculated automatically" disabled>
                    <p id="bmi_status" class="text-sm mt-1"></p>
                    <!-- BMI will be calculated by JS or PHP after weight/height input -->
                </div>

                <!-- Blood Pressure -->
                <div class="form-group">
                    <label for="systolic_bp">Blood Pressure (mmHg)</label>
                    <div class="flex gap-2">
                        <input type="number" id="systolic_bp" name="systolic_bp" placeholder="Systolic" class="w-1/2">
                        <input type="number" id="diastolic_bp" name="diastolic_bp" placeholder="Diastolic" class="w-1/2">
                    </div>
                    <p id="bp_status" class="text-sm text-gray-500 mt-1">Normal: 120/80 mmHg</p>
                </div>

                <!-- Blood Sugar Level -->
                <div class="form-group">
                    <label for="blood_sugar_level_mg_dL">Blood Sugar Level</label>
                    <input type="number" id="blood_sugar_level_mg_dL" name="blood_sugar_level_mg_dL" step="0.01" placeholder="mg/dL">
                    <p id="bs_status" class="text-sm text-gray-500 mt-1">Normal fasting: 70-100 mg/dL</p>
                </div>

                <!-- Blood Sugar Fasting Status -->
                <div class="form-group">
                    <label for="blood_sugar_fasting_status">Blood Sugar Status</label>
                    <select id="blood_sugar_fasting_status" name="blood_sugar_fasting_status">
                        <option value="">Select Status</option>
                        <option value="Fasting (8+ hours)">Fasting (8+ hours)</option>
                        <option value="Non-Fasting">Non-Fasting</option>
                        <option value="Random">Random</option>
                    </select>
                </div>
            </div>

            <!-- Address -->
            <div class="form-group">
                <label for="address">Address</label>
                <textarea id="address" name="address" rows="3" placeholder="Patient's full address"></textarea>
            </div>

            <!-- Email -->
            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" placeholder="patient.email@example.com">
            </div>

            <!-- Phone -->
            <div class="form-group">
                <label for="phone">Phone</label>
                <input type="text" id="phone" name="phone" placeholder="+256 7XX XXX XXX">
            </div>

            <!-- Health Conditions -->
            <div class="form-group">
                <label for="health_conditions">Health Conditions</label>
                <textarea id="health_conditions" name="health_conditions" rows="4" placeholder="Enter any health conditions, allergies, or medical history..."></textarea>
            </div>

            <!-- Membership -->
            <div class="form-group">
                <label for="membership_status">Membership</label>
                <select id="membership_status" name="membership_status">
                    <option value="No Membership">No Membership</option>
                    <option value="Standard">Standard</option>
                    <option value="Premium">Premium</option>
                </select>
            </div>

            <div class="form-actions">
                <button type="button" class="btn-secondary" onclick="window.location.href='<?php echo BASE_URL; ?>patients/list.php';">Cancel</button>
                <button type="submit" class="btn-primary">Save Patient</button>
            </div>
        </form>
    </div>

    <?php
    // Include the footer
    require_once __DIR__ . '/../includes/footer.php';
    ?>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const heightCmInput = document.getElementById('height_cm');
        const weightKgInput = document.getElementById('weight_kg');
        const bmiInput = document.getElementById('bmi');
        const bmiStatus = document.getElementById('bmi_status');

        const systolicBpInput = document.getElementById('systolic_bp');
        const diastolicBpInput = document.getElementById('diastolic_bp');
        const bpStatus = document.getElementById('bp_status');

        const bloodSugarInput = document.getElementById('blood_sugar_level_mg_dL');
        const bsStatus = document.getElementById('bs_status');
        const bsFastingStatus = document.getElementById('blood_sugar_fasting_status');

        // Function to calculate BMI
        function calculateBMI() {
            const heightCm = parseFloat(heightCmInput.value);
            const weightKg = parseFloat(weightKgInput.value);

            if (heightCm > 0 && weightKg > 0) {
                const heightM = heightCm / 100; // Convert cm to meters
                const bmi = weightKg / (heightM * heightM);
                bmiInput.value = bmi.toFixed(2); // Display BMI rounded to 2 decimal places

                // Provide BMI status feedback
                if (bmi < 18.5) {
                    bmiStatus.textContent = 'Underweight';
                    bmiStatus.className = 'text-sm mt-1 text-yellow-600';
                } else if (bmi >= 18.5 && bmi < 24.9) {
                    bmiStatus.textContent = 'Normal weight';
                    bmiStatus.className = 'text-sm mt-1 text-green-600';
                } else if (bmi >= 25 && bmi < 29.9) {
                    bmiStatus.textContent = 'Overweight';
                    bmiStatus.className = 'text-orange-600';
                } else if (bmi >= 30) {
                    bmiStatus.textContent = 'Obese';
                    bmiStatus.className = 'text-red-600';
                }
            } else {
                bmiInput.value = '';
                bmiStatus.textContent = '';
                bmiStatus.className = 'text-sm mt-1';
            }
        }

        // Function to check Blood Pressure status
        function checkBloodPressure() {
            const systolic = parseInt(systolicBpInput.value);
            const diastolic = parseInt(diastolicBpInput.value);

            if (!isNaN(systolic) && !isNaN(diastolic)) {
                let statusText = 'Normal: 120/80 mmHg';
                let statusClass = 'text-gray-500';

                if (systolic >= 140 || diastolic >= 90) {
                    statusText = 'High Blood Pressure (Hypertension)';
                    statusClass = 'text-red-600';
                } else if (systolic <= 90 || diastolic <= 60) {
                    statusText = 'Low Blood Pressure (Hypotension)';
                    statusClass = 'text-yellow-600';
                } else if ((systolic >= 120 && systolic <= 129) && diastolic < 80) {
                    statusText = 'Elevated Blood Pressure';
                    statusClass = 'text-orange-600';
                }

                bpStatus.textContent = statusText;
                bpStatus.className = `text-sm mt-1 ${statusClass}`;
            } else {
                bpStatus.textContent = 'Normal: 120/80 mmHg';
                bpStatus.className = 'text-sm mt-1 text-gray-500';
            }
        }

        // Function to check Blood Sugar status
        function checkBloodSugar() {
            const bloodSugar = parseFloat(bloodSugarInput.value);
            const fastingStatus = bsFastingStatus.value;

            if (!isNaN(bloodSugar)) {
                let statusText = 'Normal fasting: 70-100 mg/dL';
                let statusClass = 'text-gray-500';

                if (fastingStatus === 'Fasting (8+ hours)') {
                    if (bloodSugar < 70) {
                        statusText = 'Low Blood Sugar (Hypoglycemia)';
                        statusClass = 'text-yellow-600';
                    } else if (bloodSugar >= 70 && bloodSugar <= 100) {
                        statusText = 'Normal Fasting Blood Sugar';
                        statusClass = 'text-green-600';
                    } else if (bloodSugar > 100 && bloodSugar <= 125) {
                        statusText = 'Pre-diabetes (Impaired Fasting Glucose)';
                        statusClass = 'text-orange-600';
                    } else if (bloodSugar > 125) {
                        statusText = 'High Blood Sugar (Diabetes)';
                        statusClass = 'text-red-600';
                    }
                } else {
                    // Non-fasting or random blood sugar guidelines (simplified)
                    if (bloodSugar < 70) {
                        statusText = 'Low Blood Sugar (Hypoglycemia)';
                        statusClass = 'text-yellow-600';
                    } else if (bloodSugar < 140) {
                        statusText = 'Normal Non-Fasting Blood Sugar';
                        statusClass = 'text-green-600';
                    } else if (bloodSugar >= 140 && bloodSugar <= 199) {
                        statusText = 'Pre-diabetes (Impaired Glucose Tolerance)';
                        statusClass = 'text-orange-600';
                    } else if (bloodSugar >= 200) {
                        statusText = 'High Blood Sugar (Diabetes)';
                        statusClass = 'text-red-600';
                    }
                }

                bsStatus.textContent = statusText;
                bsStatus.className = `text-sm mt-1 ${statusClass}`;
            } else {
                bsStatus.textContent = 'Normal fasting: 70-100 mg/dL';
                bsStatus.className = 'text-sm mt-1 text-gray-500';
            }
        }


        // Event listeners for BMI calculation
        heightCmInput.addEventListener('input', calculateBMI);
        weightKgInput.addEventListener('input', calculateBMI);

        // Event listeners for Blood Pressure check
        systolicBpInput.addEventListener('input', checkBloodPressure);
        diastolicBpInput.addEventListener('input', checkBloodPressure);

        // Event listeners for Blood Sugar check
        bloodSugarInput.addEventListener('input', checkBloodSugar);
        bsFastingStatus.addEventListener('change', checkBloodSugar); // Also check on fasting status change

        // Initial calculations if values are pre-filled (e.g., on edit page later)
        calculateBMI();
        checkBloodPressure();
        checkBloodSugar();
    });
    </script>
    